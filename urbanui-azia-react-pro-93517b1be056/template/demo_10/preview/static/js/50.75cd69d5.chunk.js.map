{"version":3,"sources":["app/ui-elements/Modals.js"],"names":["Modals","props","state","showBasicModal","showSmallModal","showLargeModal","showAlertModal1","showAlertModal2","animationModal","show","className","closeModal","bind","type","this","setState","animClassName","console","log","Dialog","Header","closeButton","Title","Body","Footer","variant","onClick","onHide","size","aria-label","aria-hidden","showAnimationModal","closeAnimationModal","Component"],"mappings":"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","file":"static/js/50.75cd69d5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import ComponentsSidebar from \"../shared/ComponentsSidebar\";\nimport { Button, Modal } from \"react-bootstrap\";\n\nexport class Modals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showBasicModal: false,\n      showSmallModal: false,\n      showLargeModal: false,\n      showAlertModal1: false,\n      showAlertModal2: false,\n      animationModal: {\n        show: false,\n        className: \"\"\n      }\n    };\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  closeModal(type) {\n    if (type === \"basic\") {\n      this.setState({ showBasicModal: false });\n    } else if (type === \"small\") {\n      this.setState({ showSmallModal: false });\n    } else if (type === \"large\") {\n      this.setState({ showLargeModal: false });\n    } else if (type === \"alert1\") {\n      this.setState({ showAlertModal1: false });\n    } else if (type === \"alert2\") {\n      this.setState({ showAlertModal2: false });\n    }\n  }\n\n  showAnimationModal(animClassName) {\n    console.log(\"clicked\");\n    // this.state.animationModal.className = animClassName;\n    this.setState({\n      animationModal: { ...this.state.animationModal, show: true }  \n    });\n  }\n\n  closeAnimationModal() {\n    this.setState({\n      animationModal: { ...this.state.animationModal, show: false }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"container-fluid d-flex p-md-0\">\n          {/* <ComponentsSidebar /> */}\n          <div className=\"az-content-body d-flex flex-column\">\n            <div className=\"az-content-breadcrumb\">\n              <span>Components</span>\n              <span>UI Elements</span>\n              <span>Modals</span>\n            </div>\n            <h2 className=\"az-content-title\">Modals</h2>\n\n            <div className=\"az-content-label mg-b-5\">Basic Modal</div>\n            <p className=\"mg-b-20\">\n              Below is the static example of the basic modal.\n            </p>\n\n            <div className=\"pd-20 bg-gray-800\">\n              {/* this modal is static modal for presentation purpose. */}\n              <Modal.Dialog>\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button variant=\"indigo\">Save changes</Button>\n                  <Button variant=\"outline-light\">Close</Button>\n                </Modal.Footer>\n              </Modal.Dialog>\n            </div>\n            {/* pd-y-50 */}\n            <div className=\"tx-center pd-y-20 bg-gray-200\">\n              <Button\n                onClick={() => this.setState({ showBasicModal: true })}\n                variant=\"primary\"\n                className=\"btn-sm\"\n              >\n                View Live Demo\n              </Button>\n              <Modal\n                show={this.state.showBasicModal}\n                onHide={() => this.closeModal(\"basic\")}\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button\n                    variant=\"indigo\"\n                    onClick={() => this.closeModal(\"basic\")}\n                  >\n                    Save changes\n                  </Button>\n                  <Button\n                    variant=\"outline-light\"\n                    onClick={() => this.closeModal(\"basic\")}\n                  >\n                    Close\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            </div>\n            {/* pd-y-30 */}\n\n            <hr className=\"mg-y-30\" />\n\n            <div className=\"az-content-label mg-b-5\">Small Modal</div>\n            <p className=\"mg-b-20\">\n              Below is the static example of small modal.\n            </p>\n\n            <div className=\"pd-20 bg-gray-800\">\n              <Modal.Dialog size={\"sm\"}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button variant=\"indigo\">Save changes</Button>\n                  <Button variant=\"outline-light\">Close</Button>\n                </Modal.Footer>\n              </Modal.Dialog>\n            </div>\n            {/* modal-wrapper-demo */}\n            <div className=\"tx-center pd-y-20 bg-gray-200\">\n              <Button\n                onClick={() => this.setState({ showSmallModal: true })}\n                variant=\"primary\"\n                className=\"btn-sm\"\n              >\n                View Live Demo\n              </Button>\n              <Modal\n                show={this.state.showSmallModal}\n                size={\"sm\"}\n                onHide={() => this.closeModal(\"small\")}\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button\n                    variant=\"indigo\"\n                    onClick={() => this.closeModal(\"small\")}\n                  >\n                    Save changes\n                  </Button>\n                  <Button\n                    variant=\"outline-light\"\n                    onClick={() => this.closeModal(\"small\")}\n                  >\n                    Close\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            </div>\n            {/* pd-y-30 */}\n\n            <hr className=\"mg-y-30\" />\n\n            <div className=\"az-content-label mg-b-5\">Large Modal</div>\n            <p className=\"mg-b-20\">\n              Below is the static example of large modal.\n            </p>\n\n            <div className=\"pd-20 bg-gray-800\">\n              {/* this modal is static modal for presentation purpose. */}\n              <Modal.Dialog size={\"lg\"}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button variant=\"indigo\">Save changes</Button>\n                  <Button variant=\"outline-light\">Close</Button>\n                </Modal.Footer>\n              </Modal.Dialog>\n            </div>\n            {/* modal-wrapper-demo */}\n            <div className=\"tx-center pd-y-20 bg-gray-200\">\n              <Button\n                onClick={() => this.setState({ showLargeModal: true })}\n                variant=\"primary\"\n                className=\"btn-sm\"\n              >\n                View Live Demo\n              </Button>\n              <Modal\n                show={this.state.showLargeModal}\n                size={\"lg\"}\n                onHide={() => this.closeModal(\"large\")}\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>Message Preview</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                  <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                  <p>\n                    It is a long established fact that a reader will be\n                    distracted by the readable content of a page when looking at\n                    its layout. The point of using Lorem Ipsum is that it has a\n                    more-or-less normal distribution of letters, as opposed to\n                    using 'Content here, content here', making it look like\n                    readable English.{\" \"}\n                  </p>\n                </Modal.Body>\n\n                <Modal.Footer>\n                  <Button\n                    variant=\"indigo\"\n                    onClick={() => this.closeModal(\"large\")}\n                  >\n                    Save changes\n                  </Button>\n                  <Button\n                    variant=\"outline-light\"\n                    onClick={() => this.closeModal(\"large\")}\n                  >\n                    Close\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            </div>\n            {/* pd-y-30 */}\n\n            <hr className=\"mg-y-30\" />\n\n            <div className=\"az-content-label mg-b-5\">Modal Alert Messages</div>\n            <p className=\"mg-b-20\">\n              Below is the static example of modal alert messages.\n            </p>\n\n            <div className=\"pd-20 bg-gray-800\">\n              <Modal.Dialog>\n                <Modal.Body className=\"tx-center\">\n                  <button type=\"button\" className=\"close\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                  <i className=\"icon ion-ios-checkmark-circle-outline tx-100 tx-success lh-1 mg-t-20 d-inline-block\"></i>\n                  <h4 className=\"tx-success mg-b-20\">Congratulations!</h4>\n                  <p className=\"mg-b-20 mg-x-20\">\n                    There are many variations of passages of Lorem Ipsum\n                    available, but the majority have suffered alteration.\n                  </p>\n                  <button type=\"button\" className=\"btn btn-success pd-x-25\">\n                    Continue\n                  </button>\n                </Modal.Body>\n              </Modal.Dialog>\n            </div>\n            {/* modal-wrapper-demo */}\n            <div className=\"tx-center pd-y-20 bg-gray-200\">\n              <Button\n                onClick={() => this.setState({ showAlertModal1: true })}\n                variant=\"primary\"\n                className=\"btn-sm\"\n              >\n                View Live Demo\n              </Button>\n              <Modal\n                show={this.state.showAlertModal1}\n                onHide={() => this.closeModal(\"alert1\")}\n              >\n                <Modal.Body className=\"tx-center\">\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    aria-label=\"Close\"\n                    onClick={() => this.closeModal(\"alert1\")}\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                  <i className=\"icon ion-ios-checkmark-circle-outline tx-100 tx-success lh-1 mg-t-20 d-inline-block\"></i>\n                  <h4 className=\"tx-success mg-b-20\">Congratulations!</h4>\n                  <p className=\"mg-b-20 mg-x-20\">\n                    There are many variations of passages of Lorem Ipsum\n                    available, but the majority have suffered alteration.\n                  </p>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success pd-x-25\"\n                    onClick={() => this.closeModal(\"alert1\")}\n                  >\n                    Continue\n                  </button>\n                </Modal.Body>\n              </Modal>\n            </div>\n            {/* modal-footer-demo */}\n\n            <div className=\"pd-20 bg-gray-800 mg-t-20\">\n              <Modal.Dialog>\n                <Modal.Body className=\"tx-center\">\n                  <button type=\"button\" className=\"close\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                  <i className=\"icon icon ion-ios-close-circle-outline tx-100 tx-danger lh-1 mg-t-20 d-inline-block\"></i>\n                  <h4 className=\"tx-danger mg-b-20\">\n                    Error: Cannot process your entry!\n                  </h4>\n                  <p className=\"mg-b-20 mg-x-20\">\n                    There are many variations of passages of Lorem Ipsum\n                    available, but the majority have suffered alteration.\n                  </p>\n                  <button type=\"button\" className=\"btn btn-danger pd-x-25\">\n                    Continue\n                  </button>\n                </Modal.Body>\n              </Modal.Dialog>\n            </div>\n            {/* modal-wrapper-demo */}\n            <div className=\"tx-center pd-y-20 bg-gray-200\">\n              <Button\n                onClick={() => this.setState({ showAlertModal2: true })}\n                variant=\"primary\"\n                className=\"btn-sm\"\n              >\n                View Live Demo\n              </Button>\n              <Modal\n                show={this.state.showAlertModal2}\n                onHide={() => this.closeModal(\"alert2\")}\n              >\n                <Modal.Body className=\"tx-center\">\n                  <button\n                    type=\"button\"\n                    className=\"close\"\n                    aria-label=\"Close\"\n                    onClick={() => this.closeModal(\"alert2\")}\n                  >\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                  <i className=\"icon icon ion-ios-close-circle-outline tx-100 tx-danger lh-1 mg-t-20 d-inline-block\"></i>\n                  <h4 className=\"tx-danger mg-b-20\">\n                    Error: Cannot process your entry!\n                  </h4>\n                  <p className=\"mg-b-20 mg-x-20\">\n                    There are many variations of passages of Lorem Ipsum\n                    available, but the majority have suffered alteration.\n                  </p>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-danger pd-x-25\"\n                    onClick={() => this.closeModal(\"alert2\")}\n                  >\n                    Continue\n                  </button>\n                </Modal.Body>\n              </Modal>\n            </div>\n            {/* modal-footer-demo */}\n\n            <hr className=\"mg-y-30\" />\n\n            <div className=\"az-content-label mg-b-5\">\n              Modal Animation Effects\n            </div>\n            <p className=\"mg-b-20\">\n              Below are different kind of effects to choose from.\n            </p>\n\n            <div className=\"row row-sm\">\n              <div className=\"col-sm-6 col-md-4 col-xl-3\">\n                <Button\n                  onClick={() => this.showAnimationModal(\"effect-scale\")}\n                  variant=\"dark btn-block\"\n                >\n                  Scale\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3\">\n                <Button\n                  onClick={() =>\n                    this.showAnimationModal(\"effect-slide-in-right\")\n                  }\n                  variant=\"dark btn-block\"\n                >\n                  Slide In Right\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20 mg-md-t-0\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-slide-in-bottom\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Slide In Bottom\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20 mg-xl-t-0\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-newspaper\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Newspaper\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-fall\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Fall\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-flip-horizontal\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Flip Horizontal\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-flip-vertical\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Flip Vertical\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-super-scaled\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Super Scaled\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-sign\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Sign\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-rotate-bottom\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Rotate Bottom\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-rotate-left\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Rotate Left\n                </Button>\n              </div>\n              {/* col-3 */}\n              <div className=\"col-sm-6 col-md-4 col-xl-3 mg-t-20\">\n                <Button\n                  onClick={() => {\n                    this.showAnimationModal(\"effect-just-me\");\n                  }}\n                  variant=\"dark btn-block\"\n                >\n                  Just Me\n                </Button>\n              </div>\n              {/* col-3 */}\n            </div>\n            {/* row */}\n\n            {/* Animation Modal */}\n            <Modal\n              show={this.state.animationModal.show}\n              className={this.state.animationModal.className}\n              onHide={() => this.closeAnimationModal()}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>Message Preview</Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <h6>Why We Use Electoral College, Not Popular Vote</h6>\n                <p>\n                  It is a long established fact that a reader will be distracted\n                  by the readable content of a page when looking at its layout.\n                  The point of using Lorem Ipsum is that it has a more-or-less\n                  normal distribution of letters, as opposed to using 'Content\n                  here, content here', making it look like readable English.{\" \"}\n                </p>\n              </Modal.Body>\n\n              <Modal.Footer>\n                <Button\n                  variant=\"indigo\"\n                  onClick={() => this.closeAnimationModal()}\n                >\n                  Save changes\n                </Button>\n                <Button\n                  variant=\"outline-light\"\n                  onClick={() => this.closeAnimationModal()}\n                >\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            {/* Animation Modal */}\n\n            <table className=\"table az-table-reference\">\n              <thead>\n                <tr>\n                  <th className=\"wd-40p\">Class Reference</th>\n                  <th className=\"wd-60p\">Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>\n                    <code className=\"pd-0 bg-transparent\">\n                      className=\"modal fade effect-[value]\"\n                    </code>\n                  </td>\n                  <td>\n                    scale | slide-in-right | slide-in-bottom | newspaper | fall\n                    | flip-horizontal | flip-vertical | super-scaled | sign |\n                    rotate-bottom | rotate-left | just-me\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n\n            <div className=\"mg-lg-b-30\"></div>\n          </div>\n          {/* az-content-body */}\n        </div>\n        {/* container */}\n      </div>\n    );\n  }\n}\n\nexport default Modals;\n"],"sourceRoot":""}